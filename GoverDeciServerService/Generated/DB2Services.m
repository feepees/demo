/*
	DB2Services.m
	Creates a list of the services available with the DB2 prefix.
	Generated by SudzC.com
*/
#import "DB2Services.h"

@implementation DB2Services

@synthesize logging, server, defaultServer;

@synthesize goverDeciServerService;


#pragma mark Initialization

-(id)initWithServer:(NSString*)serverName{
	if(self = [self init]) {
		self.server = serverName;
	}
	return self;
}

+(DB2Services*)service{
	return (DB2Services*)[[[DB2Services alloc] init] autorelease];
}

+(DB2Services*)serviceWithServer:(NSString*)serverName{
	return (DB2Services*)[[[DB2Services alloc] initWithServer:serverName] autorelease];
}

#pragma mark Methods

-(void)setLogging:(BOOL)value{
	logging = value;
	[self updateServices];
}

-(void)setServer:(NSString*)value{
	[server release];
	server = [value retain];
	[self updateServices];
}

-(void)updateServices{

	[self updateService: self.goverDeciServerService];
}

-(void)updateService:(SoapService*)service{
	service.logging = self.logging;
	if(self.server == nil || self.server.length < 1) { return; }
	service.serviceUrl = [service.serviceUrl stringByReplacingOccurrencesOfString:defaultServer withString:self.server];
}

#pragma mark Getter Overrides


-(DB2GoverDeciServerService*)goverDeciServerService{
	if(goverDeciServerService == nil) {
		goverDeciServerService = [[DB2GoverDeciServerService alloc] init];
	}
	return goverDeciServerService;
}


@end
			