/*
	DBabstractResponse.h
	The implementation of properties and methods for the DBabstractResponse object.
	Generated by SudzC.com
*/
#import "DBabstractResponse.h"

@implementation DBabstractResponse
	@synthesize message = _message;
	@synthesize statu = _statu;

	- (id) init
	{
		if(self = [super init])
		{
			self.message = nil;

		}
		return self;
	}

	+ (DBabstractResponse*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (DBabstractResponse*)[[[DBabstractResponse alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.message = [Soap getNodeValue: node withName: @"message"];
			self.statu = [[Soap getNodeValue: node withName: @"statu"] boolValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"abstractResponse"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.message != nil) [s appendFormat: @"<message>%@</message>", [[self.message stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<statu>%@</statu>", (self.statu)?@"true":@"false"];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[DBabstractResponse class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.message != nil) { [self.message release]; }
		[super dealloc];
	}

@end
