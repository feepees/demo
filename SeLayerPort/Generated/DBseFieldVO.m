/*
	DBseFieldVO.h
	The implementation of properties and methods for the DBseFieldVO object.
	Generated by SudzC.com
*/
#import "DBseFieldVO.h"

@implementation DBseFieldVO
	@synthesize aliasname = _aliasname;
	@synthesize fieldname = _fieldname;
	@synthesize isrequired = _isrequired;
	@synthesize size = _size;
	@synthesize type = _type;

	- (id) init
	{
		if(self = [super init])
		{
			self.aliasname = nil;
			self.fieldname = nil;

		}
		return self;
	}

	+ (DBseFieldVO*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (DBseFieldVO*)[[[DBseFieldVO alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.aliasname = [Soap getNodeValue: node withName: @"aliasname"];
			self.fieldname = [Soap getNodeValue: node withName: @"fieldname"];
			self.isrequired = [[Soap getNodeValue: node withName: @"isrequired"] intValue];
			self.size = [[Soap getNodeValue: node withName: @"size"] intValue];
			self.type = [[Soap getNodeValue: node withName: @"type"] intValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"seFieldVO"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.aliasname != nil) [s appendFormat: @"<aliasname>%@</aliasname>", [[self.aliasname stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.fieldname != nil) [s appendFormat: @"<fieldname>%@</fieldname>", [[self.fieldname stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<isrequired>%@</isrequired>", [NSString stringWithFormat: @"%i", self.isrequired]];
		[s appendFormat: @"<size>%@</size>", [NSString stringWithFormat: @"%i", self.size]];
		[s appendFormat: @"<type>%@</type>", [NSString stringWithFormat: @"%i", self.type]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[DBseFieldVO class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.aliasname != nil) { [self.aliasname release]; }
		if(self.fieldname != nil) { [self.fieldname release]; }
		[super dealloc];
	}

@end
