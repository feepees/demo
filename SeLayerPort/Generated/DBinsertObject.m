/*
	DBinsertObject.h
	The implementation of properties and methods for the DBinsertObject object.
	Generated by SudzC.com
*/
#import "DBinsertObject.h"

#import "DBfeature.h"
@implementation DBinsertObject
	@synthesize bsm = _bsm;
	@synthesize feature = _feature;
	@synthesize tableName = _tableName;
	@synthesize tcdm = _tcdm;
	@synthesize ysdm = _ysdm;

	- (id) init
	{
		if(self = [super init])
		{
			self.bsm = nil;
			self.feature = nil; // [[DBfeature alloc] init];
			self.tableName = nil;
			self.tcdm = nil;
			self.ysdm = nil;

		}
		return self;
	}

	+ (DBinsertObject*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (DBinsertObject*)[[[DBinsertObject alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.bsm = [Soap getNodeValue: node withName: @"bsm"];
			self.feature = [[DBfeature newWithNode: [Soap getNode: node withName: @"feature"]] object];
			self.tableName = [Soap getNodeValue: node withName: @"tableName"];
			self.tcdm = [Soap getNodeValue: node withName: @"tcdm"];
			self.ysdm = [Soap getNodeValue: node withName: @"ysdm"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"insertObject"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.bsm != nil) [s appendFormat: @"<bsm>%@</bsm>", [[self.bsm stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.feature != nil) [s appendString: [self.feature serialize: @"feature"]];
		if (self.tableName != nil) [s appendFormat: @"<tableName>%@</tableName>", [[self.tableName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.tcdm != nil) [s appendFormat: @"<tcdm>%@</tcdm>", [[self.tcdm stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ysdm != nil) [s appendFormat: @"<ysdm>%@</ysdm>", [[self.ysdm stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[DBinsertObject class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.bsm != nil) { [self.bsm release]; }
		if(self.feature != nil) { [self.feature release]; }
		if(self.tableName != nil) { [self.tableName release]; }
		if(self.tcdm != nil) { [self.tcdm release]; }
		if(self.ysdm != nil) { [self.ysdm release]; }
		[super dealloc];
	}

@end
