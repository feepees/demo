/*
	DBSeLayerPort.m
	The implementation classes and methods for the SeLayerPort web service.
	Generated by SudzC.com
*/

#import "DBSeLayerPort.h"
				
#import "Soap.h"
	
#import "DBupdateResponse.h"
#import "DBdeleteResponse.h"
#import "DBhashMap.h"
#import "DBabstractMap.h"
#import "DBgetLayers.h"
#import "DBSOAPException.h"
#import "DBupdateFeature.h"
#import "DBfields.h"
#import "DBupdateFeatureResponse.h"
#import "DBdeleteFeature.h"
#import "DBdeleteFeatureResponse.h"
#import "DBgetLayer.h"
#import "DBgetLayerResponse.h"
#import "DBgetFeatureByBsmResponse.h"
#import "DBgetFeature.h"
#import "DBgetFeatureResponse.h"
#import "DBinsertFeature.h"
#import "DBinsertFeatureResponse.h"
#import "DBinsertResponse.h"
#import "DBgetLayersResponse.h"
#import "DBabstractResponse.h"
#import "DBdeleteObject.h"
#import "DBgetFeatureByBsm.h"
#import "DBupdateObject.h"
#import "DBfield.h"
#import "DBrelationField.h"
#import "DBseLayerVO.h"
#import "DBfeature.h"
#import "DBwebGeometry.h"
#import "DBseFieldVO.h"
#import "DBqueryResponse.h"
#import "DBfeatureSet.h"
#import "DBinsertObject.h"
#import "DBrelationTable.h"
#import "DBqueryObject.h"
#import "DBLocalTileDataManager.h"

/* Implementation of the service */
				
@implementation DBSeLayerPort

	- (id) init
	{
		if(self = [super init])
		{
            DBLocalTileDataManager *LocalTileDataManager = [DBLocalTileDataManager instance];
            self.serviceUrl = LocalTileDataManager.GISWebServiceUrl;
			//self.serviceUrl = @"http://172.16.200.5:8081/szmap/services/sdelayerport";
            //self.serviceUrl = @"http://gis.huizhou.gov.cn:8080/szmap/services/sdelayerport";
            //self.serviceUrl = @"http://gisserver:8081/szmap/services/sdelayerport";

			self.namespace = @"http://agsws.sunz.com/";
			self.headers = nil;
			self.logging = NO;
		}
		return self;
	}
	
	- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
		if(self = [super initWithUsername:username andPassword:password]) {
		}
		return self;
	}
	
	+ (DBSeLayerPort*) service {
		return [DBSeLayerPort serviceWithUsername:nil andPassword:nil];
	}
	
	+ (DBSeLayerPort*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
		return [[[DBSeLayerPort alloc] initWithUsername:username andPassword:password] autorelease];
	}

		
	/* Returns DBupdateResponse*.  */
	- (SoapRequest*) updateFeature: (id <SoapDelegate>) handler arg0: (DBupdateObject*) arg0
	{
		return [self updateFeature: handler action: nil arg0: arg0];
	}

	- (SoapRequest*) updateFeature: (id) _target action: (SEL) _action arg0: (DBupdateObject*) arg0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: arg0 forName: @"arg0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"updateFeature" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: nil];
		[_request send];
		return _request;
	}

	/* Returns DBdeleteResponse*.  */
	- (SoapRequest*) deleteFeature: (id <SoapDelegate>) handler arg0: (DBdeleteObject*) arg0
	{
		return [self deleteFeature: handler action: nil arg0: arg0];
	}

	- (SoapRequest*) deleteFeature: (id) _target action: (SEL) _action arg0: (DBdeleteObject*) arg0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: arg0 forName: @"arg0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"deleteFeature" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: nil];
		[_request send];
		return _request;
	}

	/* Returns DBseLayerVO*.  */
	- (SoapRequest*) getLayer: (id <SoapDelegate>) handler arg0: (NSString*) arg0
	{
		return [self getLayer: handler action: nil arg0: arg0];
	}

	- (SoapRequest*) getLayer: (id) _target action: (SEL) _action arg0: (NSString*) arg0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: arg0 forName: @"arg0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getLayer" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: nil];
		[_request send];
		return _request;
	}

	/* Returns DBfeature*.  */
	- (SoapRequest*) getFeatureByBsm: (id <SoapDelegate>) handler layerName: (NSString*) layerName bsm: (NSString*) bsm
	{
		return [self getFeatureByBsm: handler action: nil layerName: layerName bsm: bsm];
	}

	- (SoapRequest*) getFeatureByBsm: (id) _target action: (SEL) _action layerName: (NSString*) layerName bsm: (NSString*) bsm
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: layerName forName: @"layerName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: bsm forName: @"bsm"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getFeatureByBsm" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: nil];
		[_request send];
		return _request;
	}

	/* Returns DBqueryResponse*.  */
	- (SoapRequest*) getFeature: (id <SoapDelegate>) handler arg0: (DBqueryObject*) arg0
	{
		return [self getFeature: handler action: nil arg0: arg0];
	}

	- (SoapRequest*) getFeature: (id) _target action: (SEL) _action arg0: (DBqueryObject*) arg0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: arg0 forName: @"arg0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getFeature" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: nil];
		[_request send];
		return _request;
	}

	/* Returns DBinsertResponse*.  */
	- (SoapRequest*) insertFeature: (id <SoapDelegate>) handler arg0: (DBinsertObject*) arg0
	{
		return [self insertFeature: handler action: nil arg0: arg0];
	}

	- (SoapRequest*) insertFeature: (id) _target action: (SEL) _action arg0: (DBinsertObject*) arg0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: arg0 forName: @"arg0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"insertFeature" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: nil];
		[_request send];
		return _request;
	}

	/* Returns DBseLayerVO*.  */
	- (SoapRequest*) getLayers: (id <SoapDelegate>) handler
	{
		return [self getLayers: handler action: nil];
	}

	- (SoapRequest*) getLayers: (id) _target action: (SEL) _action
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		NSString* _envelope = [Soap createEnvelope: @"getLayers" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: nil];
		[_request send];
		return _request;
	}


@end
	
